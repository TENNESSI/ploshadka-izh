from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from database.queries import get_admin_stats
from keyboards.admin import (
    admin_main_keyboard,
    admin_management_keyboard,
    stats_keyboard
)
from utils.date_utils import get_month_range


# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
async def show_admin_panel(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await message.answer(
        "‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        reply_markup=admin_main_keyboard()
    )


# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
async def show_management_menu(message: types.Message):
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏"""
    await message.answer(
        "üõ† –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏:",
        reply_markup=admin_management_keyboard()
    )


# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
async def show_stats_menu(message: types.Message):
    """–ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    await message.answer(
        "üìä –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=stats_keyboard()
    )


async def show_current_month_stats(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü"""
    start_date, end_date = get_month_range()
    stats = await get_admin_stats(start_date, end_date)

    stats_message = (
        f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü:\n\n"
        f"‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏: {stats['new_appointments']}\n"
        f"‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏: {stats['completed_services']}\n"
        f"‚Ä¢ –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏: {stats['canceled_appointments']}\n"
        f"‚Ä¢ –û–±—â–∏–π –¥–æ—Ö–æ–¥: {stats['total_income']} —Ä—É–±.\n\n"
        f"üìÖ –ü–µ—Ä–∏–æ–¥: {start_date.strftime('%d.%m.%Y')}-{end_date.strftime('%d.%m.%Y')}"
    )

    await message.answer(stats_message)


# –í—ã—Ö–æ–¥ –∏–∑ –∞–¥–º–∏–Ω–∫–∏
async def exit_admin_panel(message: types.Message):
    """–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    await message.answer(
        "–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        reply_markup=types.ReplyKeyboardRemove()
    )


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
def register_handlers(dp: Dispatcher):
    # –ö–æ–º–∞–Ω–¥–∞ /admin
    dp.register_message_handler(
        show_admin_panel,
        commands=["admin"],
        is_admin=True
    )

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    dp.register_message_handler(
        show_admin_panel,
        Text(equals="–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", ignore_case=True),
        is_admin=True
    )

    # –ü–æ–¥–º–µ–Ω—é
    dp.register_message_handler(
        show_management_menu,
        Text(equals="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ", ignore_case=True),
        is_admin=True
    )

    dp.register_message_handler(
        show_stats_menu,
        Text(equals="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", ignore_case=True),
        is_admin=True
    )

    dp.register_message_handler(
        show_current_month_stats,
        Text(equals="–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", ignore_case=True),
        is_admin=True
    )

    dp.register_message_handler(
        exit_admin_panel,
        Text(equals="–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω–∫–∏", ignore_case=True),
        is_admin=True
    )